$spacing: (
  0: 0,
  1: var(--calcite-spacing-px),
  2: var(--calcite-spacing-base),
  3: var(--calcite-spacing-xxs),
  4: var(--calcite-spacing-xs),
  5: var(--calcite-spacing-sm),
  6: var(--calcite-spacing-md),
  7: var(--calcite-spacing-lg),
  8: var(--calcite-spacing-xl),
  9: var(--calcite-spacing-xxl),
  10: var(--calcite-spacing-xxxl),
  auto: auto,
);

@each $name, $value in $spacing {
  .p-#{$name} {
    padding: $value !important;
  }

  .m-#{$name} {
    margin: $value !important;
  }
}

@each $name, $value in $spacing {
  .px-#{$name} {
    padding-left: $value !important;
    padding-right: $value !important;
  }

  .py-#{$name} {
    padding-top: $value !important;
    padding-bottom: $value !important;
  }

  .p-inline-#{$name} {
    padding-inline: $value !important;
  }

  .p-block-#{$name} {
    padding-block: $value !important;
  }

  .ps-#{$name} {
    padding-inline-start: $value !important;
  }

  .pe-#{$name} {
    padding-inline-end: $value !important;
  }

  .mx-#{$name} {
    margin-left: $value !important;
    margin-right: $value !important;
  }

  .my-#{$name} {
    margin-top: $value !important;
    margin-bottom: $value !important;
  }

  .ms-#{$name} {
    margin-inline-start: $value !important;
  }

  .me-#{$name} {
    margin-inline-end: $value !important;
  }
}

@each $name, $value in $spacing {
  .pt-#{$name} {
    padding-top: $value !important;
  }

  .pr-#{$name} {
    padding-right: $value !important;
  }

  .pb-#{$name} {
    padding-bottom: $value !important;
  }

  .pl-#{$name} {
    padding-left: $value !important;
  }

  .mt-#{$name} {
    margin-top: $value !important;
  }

  .mr-#{$name} {
    margin-right: $value !important;
  }

  .mb-#{$name} {
    margin-bottom: $value !important;
  }

  .ml-#{$name} {
    margin-left: $value !important;
  }
}

$borderWidths: (
  0: var(--calcite-border-width-none),
  1: var(--calcite-border-width-sm),
  2: var(--calcite-border-width-md),
  3: var(--calcite-border-width-lg),
);

@each $name, $value in $borderWidths {
  .border-#{$name} {
    border-width: $value !important;
    border-style: solid !important;
  }

  .border-t-#{$name} {
    border-top-width: $value !important;
    border-top-style: solid !important;
  }

  .border-r-#{$name} {
    border-right-width: $value !important;
    border-right-style: solid !important;
  }

  .border-b-#{$name} {
    border-bottom-width: $value !important;
    border-bottom-style: solid !important;
  }

  .border-l-#{$name} {
    border-left-width: $value !important;
    border-left-style: solid !important;
  }

  .border-x-#{$name} {
    border-left-width: $value !important;
    border-right-width: $value !important;
    border-left-style: solid !important;
    border-right-style: solid !important;
  }

  .border-y-#{$name} {
    border-top-width: $value !important;
    border-bottom-width: $value !important;
    border-style: solid !important;
  }

  .hover\:border-#{$name}:hover {
    border-width: $value !important;
    border-style: solid !important;
  }

  .focus\:border-#{$name}:focus {
    border-width: $value !important;
    border-style: solid !important;
  }

  .active\:border-#{$name}:active {
    border-width: $value !important;
    border-style: solid !important;
  }
}

$borderColors: (
  1: var(--calcite-color-border-1),
  2: var(--calcite-color-border-2),
  3: var(--calcite-color-border-3),
  input: var(--calcite-color-border-input),
  ghost: var(--calcite-color-border-ghost),
  white: var(--calcite-color-border-white),
  brand: var(--calcite-color-brand),
  info: var(--calcite-color-info),
  success: var(--calcite-color-success),
  warning: var(--calcite-color-warning),
  danger: var(--calcite-color-danger)
);

@each $name, $value in $borderColors {
  .border-color-#{"" + $name} {
    border-color: $value !important;
  }

  .border-t-color-#{"" + $name} {
    border-top-color: $value !important;
  }

  .border-r-color-#{"" + $name} {
    border-right-color: $value !important;
  }

  .border-b-color-#{"" + $name} {
    border-bottom-color: $value !important;
  }

  .border-l-color-#{"" + $name} {
    border-left-color: $value !important;
  }

  .border-x-color-#{"" + $name} {
    border-left-color: $value !important;
    border-right-color: $value !important;
  }

  .border-y-color-#{"" + $name} {
    border-top-color: $value !important;
    border-bottom-color: $value !important;
  }

  .hover\:border-color-#{"" + $name}:hover {
    border-color: $value !important;
  }

  .focus\:border-color-#{"" + $name}:focus {
    border-color: $value !important;
  }

  .active\:border-color-#{"" + $name}:active {
    border-color: $value !important;
  }
}

$borderStyles: (
  solid: solid,
  dashed: dashed,
  dotted: dotted,
  double: double,
  none: none,
);

@each $name, $value in $borderStyles {
  .border-#{$name} {
    border-style: $value !important;
  }
}

$borderRadius: (
  default: var(--calcite-corner-radius),
  sharp: var(--calcite-corner-radius-sharp),
  round: var(--calcite-corner-radius-round),
  pill: var(--calcite-corner-radius-pill),
);

@each $name, $value in $borderRadius {
  .rounded-#{$name} {
    border-radius: $value !important;
  }
}

$outlineWidths: (
  0: var(--calcite-border-width-none),
  1: var(--calcite-border-width-sm),
  2: var(--calcite-border-width-md),
  3: var(--calcite-border-width-lg),
);

@each $name, $value in $outlineWidths {
  .outline-#{$name} {
    outline-width: $value !important;
    outline-style: solid;
  }

  .hover\:outline-#{$name}:hover {
    outline-width: $value !important;
    outline-style: solid;
  }

  .focus\:outline-#{$name}:focus {
    outline-width: $value !important;
    outline-style: solid;
  }

  .active\:outline-#{$name}:active {
    outline-width: $value !important;
    outline-style: solid;
  }
}

$outlineColors: (
  1: var(--calcite-color-border-1),
  2: var(--calcite-color-border-2),
  3: var(--calcite-color-border-3),
  input: var(--calcite-color-border-input),
  ghost: var(--calcite-color-border-ghost),
  white: var(--calcite-color-border-white),
  brand: var(--calcite-color-brand),
  info: var(--calcite-color-info),
  success: var(--calcite-color-success),
  warning: var(--calcite-color-warning),
  danger: var(--calcite-color-danger)
);

@each $name, $value in $outlineColors {
  .outline-color-#{"" + $name} {
    outline-color: $value !important;
  }

  .hover\:outline-color-#{"" + $name}:hover {
    outline-color: $value !important;
  }

  .focus\:outline-color-#{"" + $name}:focus {
    outline-color: $value !important;
  }

  .active\:outline-color-#{"" + $name}:active {
    outline-color: $value !important;
  }
}

$outlineStyles: (
  solid: solid,
  dashed: dashed,
  dotted: dotted,
  double: double,
  none: none,
);

@each $name, $value in $outlineStyles {
  .outline-#{$name} {
    outline-style: $value !important;
  }
}

$outlineOffset: (
  0: 0,
  1: var(--calcite-spacing-px),
  2: var(--calcite-spacing-base),
  3: var(--calcite-spacing-xxs),
  4: var(--calcite-spacing-xs)
);

@each $name, $value in $outlineOffset {
  .outline-offset-#{$name} {
    outline-offset: $value !important;
  }
}

$dimensionValues: (
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%,
);

@each $name, $value in $dimensionValues {
  .w-#{$name} {
    width: $value !important;
  }

  .h-#{$name} {
    height: $value !important;
  }

  .inline-size-#{$name} {
    inline-size: $value !important;
  }
}

$positions: (
  relative: relative,
  absolute: absolute,
  fixed: fixed,
  sticky: sticky,
);

@each $name, $value in $positions {
  .#{$name} {
    position: $value !important;
  }
}

$placementValues: (
  0: 0,
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%,
);

@each $name, $value in $placementValues {
  .top-#{$name} {
    top: $value !important;
  }

  .right-#{$name} {
    right: $value !important;
  }

  .bottom-#{$name} {
    bottom: $value !important;
  }

  .left-#{$name} {
    left: $value !important;
  }
}

$display: (
  block: block,
  inline: inline,
  inline-block: inline-block,
  flex: flex,
  inline-flex: inline-flex,
  grid: grid,
  inline-grid: inline-grid,
  table: table,
  table-row: table-row,
  table-cell: table-cell,
  hidden: none,
);

@each $name, $value in $display {
  .d-#{$name} {
    display: $value !important;
  }
}

$flex: (
  1: 1 1 0%,
  auto: 1 1 auto,
  none: none,
);

@each $name, $value in $flex {
  .flex-#{$name} {
    flex: $value !important;
  }
}

$justifyContent: (
  start: flex-start,
  end: flex-end,
  center: center,
  between: space-between,
  around: space-around,
);

@each $name, $value in $justifyContent {
  .justify-#{$name} {
    justify-content: $value !important;
  }
}

$alignItems: (
  start: flex-start,
  end: flex-end,
  center: center,
  baseline: baseline,
  stretch: stretch,
);

@each $name, $value in $alignItems {
  .items-#{$name} {
    align-items: $value !important;
  }
}

$flexDirections: (
  row: row,
  row-reverse: row-reverse,
  column: column,
  column-reverse: column-reverse,
);

@each $name, $value in $flexDirections {
  .flex-#{$name} {
    flex-direction: $value !important;
  }
}

$flexGaps: (
  1: var(--calcite-spacing-xxs),
  2: var(--calcite-spacing-xs),
  3: var(--calcite-spacing-sm),
  4: var(--calcite-spacing-md),
  5: var(--calcite-spacing-lg),
  6: var(--calcite-spacing-xl),
  7: var(--calcite-spacing-xxl),
  8: var(--calcite-spacing-xxxl),
);

@each $name, $value in $flexGaps {
  .gap-y-#{$name} {
    column-gap: $value !important;
  }

  .gap-x-#{$name} {
    row-gap: $value !important;
  }

  .gap-#{$name} {
    gap: $value !important;
  }
}

$backgrounds: (
  default: var(--calcite-color-background),
  none: var(--calcite-color-background-none),
  1: var(--calcite-color-foreground-1),
  2: var(--calcite-color-foreground-2),
  3: var(--calcite-color-foreground-3),
  current: var(--calcite-color-foreground-current),
  brand: var(--calcite-color-brand),
  info: var(--calcite-color-info),
  success: var(--calcite-color-success),
  warning: var(--calcite-color-warning),
  danger: var(--calcite-color-danger),
);

@each $name, $value in $backgrounds {
  .bg-#{$name} {
    background-color: $value !important;
  }

  .hover\:bg-#{$name}:hover {
    background-color: $value !important;
  }

  .focus\:bg-#{$name}:focus {
    background-color: $value !important;
  }

  .active\:bg-#{$name}:active {
    background-color: $value !important;
  }
}

$opacities: (
  light: var(--calcite-opacity-light),
  half: var(--calcite-opacity-half),
  dark: var(--calcite-opacity-dark),
  full: var(--calcite-opacity-full),
  disabled: var(--calcite-opacity-disabled),
  0: 0,
  4: 0.04,
  8: 0.08,
  10: 0.1,
  20: 0.2,
  30: 0.3,
  40: 0.4,
  50: 0.5,
  60: 0.6,
  70: 0.7,
  80: 0.8,
  85: 0.85,
  90: 0.9,
  92: 0.92,
  96: 0.96,
  100: 1,
);

@each $name, $value in $opacities {
  .opacity-#{$name} {
    opacity: $value !important;
  }
}

$stacking: (
  0: var(--calcite-z-index-0),
  1: var(--calcite-z-index-1),
  2: var(--calcite-z-index-2),
  3: var(--calcite-z-index-3),
  4: var(--calcite-z-index-4),
  5: var(--calcite-z-index-5),
  6: var(--calcite-z-index-6),
  7: var(--calcite-z-index-7),
  8: var(--calcite-z-index-8),
  9: var(--calcite-z-index-9)
);

@each $name, $value in $stacking {
  .z-#{$name} {
    z-index: $value !important;
  }
}

$shadowValues: (
  none: var(--calcite-shadow-none),
  sm: var(--calcite-shadow-sm),
  md: var(--calcite-shadow-md),
  0: var(--calcite-shadow-0),
  1: var(--calcite-shadow-1),
  2: var(--calcite-shadow-2),
  3: var(--calcite-shadow-3),
  4: var(--calcite-shadow-4)
);

@each $name, $value in $shadowValues {
  .shadow-#{$name} {
    box-shadow: $value !important;
  }
}

$textColors: (
  1: var(--calcite-color-text-1),
  2: var(--calcite-color-text-2),
  3: var(--calcite-color-text-3),
  link: var(--calcite-color-text-link),
  inverse: var(--calcite-color-text-inverse),
);

@each $name, $value in $textColors {
  .text-color-#{$name} {
    color: $value !important;
  }
}

$fontFamilies: (
  default: var(--calcite-font-family),
  code: var(--calcite-font-family-code),
);

@each $name, $value in $fontFamilies {
  .font-#{$name} {
    font-family: $value !important;
  }
}

$fontWeights: (
  light: var(--calcite-font-weight-light),
  normal: var(--calcite-font-weight-normal),
  regular: var(--calcite-font-weight-regular),
  medium: var(--calcite-font-weight-medium),
  semibold: var(--calcite-font-weight-semibold),
  bold: var(--calcite-font-weight-bold),
);

@each $name, $value in $fontWeights {
  .font-#{$name} {
    font-weight: $value !important;
  }
}

$fontStyles: (
  emphasis: var(--calcite-font-style-emphasis),
);

@each $name, $value in $fontStyles {
  .font-#{$name} {
    font-style: $value !important;
  }
}

$fontSizes: (
  -3: var(--calcite-font-size--3),
  -2: var(--calcite-font-size--2),
  -1: var(--calcite-font-size--1),
  0: var(--calcite-font-size-0),
  1: var(--calcite-font-size-1),
  2: var(--calcite-font-size-2),
  3: var(--calcite-font-size-3),
  4: var(--calcite-font-size-4),
  5: var(--calcite-font-size-5),
  6: var(--calcite-font-size-6),
  7: var(--calcite-font-size-7),
  8: var(--calcite-font-size-8),
  xs: var(--calcite-font-size-xs),
  sm: var(--calcite-font-size-sm),
  default: var(--calcite-font-size),
  md: var(--calcite-font-size-md),
  lg: var(--calcite-font-size-lg),
  xl: var(--calcite-font-size-xl),
  xxl: var(--calcite-font-size-xxl)
);

@each $name, $value in $fontSizes {
  .text-#{$name} {
    font-size: $value !important;
  }
}

$lineHeights: (
  sm: var(--calcite-font-line-height-fixed-sm),
  base: var(--calcite-font-line-height-fixed-base),
  lg: var(--calcite-font-line-height-fixed-lg),
  xl: var(--calcite-font-line-height-fixed-xl),
  default: var(--calcite-font-line-height-relative),
  tight: var(--calcite-font-line-height-relative-tight),
  snug: var(--calcite-font-line-height-relative-snug),
  normal: var(--calcite-font-line-height-relative-normal),
  relaxed: var(--calcite-font-line-height-relative-relaxed),
  loose: var(--calcite-font-line-height-relative-loose),
);

@each $name, $value in $lineHeights {
  .leading-#{$name} {
    line-height: $value !important;
  }
}

$textAlignments: (
  left: left,
  center: center,
  right: right,
  justify: justify
);

@each $name, $value in $textAlignments {
  .text-#{$name} {
    text-align: $value !important;
  }
}

$textOverflow: (
  ellipsis: ellipsis,
  clip: clip,
  truncate: truncate
);

@each $name, $value in $textOverflow {
  @if $name ==truncate {
    .text-#{$name} {
      overflow: hidden !important;
      white-space: nowrap !important;
      text-overflow: ellipsis !important;
    }
  }

  @else {
    .text-#{$name} {
      text-overflow: $value !important;
    }
  }
}

$cursorValues: (
  default: auto,
  pointer: pointer,
  grab: grab,
  grabbing: grabbing,
  not-allowed: not-allowed,
);

@each $name, $value in $cursorValues {
  .cursor-#{$name} {
    cursor: $value !important;
  }
}

$overflowValues: (
  auto: auto,
  hidden: hidden,
  visible: visible,
  scroll: scroll,
);

@each $name, $value in $overflowValues {
  .overflow-#{$name} {
    overflow: $value !important;
  }

  .overflow-x-#{$name} {
    overflow-x: $value !important;
  }

  .overflow-y-#{$name} {
    overflow-y: $value !important;
  }
}

$boxSizingValues: (
  border: border-box,
  content: content-box,
);

@each $name, $value in $boxSizingValues {
  .box-#{$name} {
    box-sizing: $value !important;
  }
}

$objectFitValues: (
  contain: contain,
  cover: cover,
  fill: fill,
  none: none,
  scale-down: scale-down,
);

@each $name, $value in $objectFitValues {
  .object-fit-#{$name} {
    object-fit: $value !important;
  }
}